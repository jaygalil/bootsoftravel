// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  AGENT
}

enum AttendanceStatus {
  PRESENT
  ABSENT
  LATE
  ON_LEAVE
}

enum ReportFormat {
  PDF
  EXCEL
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  role      UserRole @default(AGENT)
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  attendanceLogs AttendanceLog[]
  reports        Report[]
  
  @@map("users")
}

model Checkpoint {
  id          String   @id @default(cuid())
  name        String
  description String?
  latitude    Float
  longitude   Float
  radius      Float    // in meters
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  attendanceLogs AttendanceLog[]
  
  @@map("checkpoints")
}

model AttendanceLog {
  id           String           @id @default(cuid())
  userId       String
  checkpointId String
  timeIn       DateTime?
  timeOut      DateTime?
  status       AttendanceStatus @default(PRESENT)
  notes        String?
  createdAt    DateTime         @default(now())
  updatedAt    DateTime         @updatedAt

  // Relations
  user       User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  checkpoint Checkpoint @relation(fields: [checkpointId], references: [id], onDelete: Cascade)
  
  @@map("attendance_logs")
}

model Report {
  id        String       @id @default(cuid())
  userId    String
  title     String
  format    ReportFormat
  filePath  String?
  generatedAt DateTime    @default(now())
  createdAt DateTime     @default(now())

  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@map("reports")
}